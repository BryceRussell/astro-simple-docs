---
import type { MarkdownHeading } from 'astro';
import { Icon } from 'astro-icon';
import type { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'div'>{
    url: string;
    headings?: MarkdownHeading[];
    depth?: number;
    max?: number;
    item?: string;
    title?: string;
    open?: boolean;
    close?: boolean;
}

const {
    url,
    headings=[],
    depth=1,
    max=6,
    item: Item ="a",
    title,
    open=false,
    close=false,
    ...attrs
} = Astro.props

const equalDepth = headings.filter(h => h.depth === +depth);

const Tag = depth === 1 ? 'details' : 'ol'

const _attrs = {
    class: depth === 1
        ? "table-of-contents"
        : null,
    open: open
        ? true
        : null,
    'data-depth': depth,
    ...attrs
}
---

<Tag {..._attrs}>
    { equalDepth.map((heading, i) => {
        const start = headings.indexOf(heading) + 1
        const end = headings.indexOf(equalDepth[i + 1])
        const subHeadings = headings.slice(start, end === -1 ? undefined : end)
        const text = heading.text.replace(/^#/g, '')
        const link_attrs = {
            href: depth === 1 
                ? url
                : `${url}#${heading.slug}`,
            onclick: close
                ? "toggleDetails(this)"
                : null
        }
        const _props = { 
            url, 
            headings: subHeadings, 
            depth: heading.depth + 1,
            max,
            close
        } 
        return <>
            { depth === 1
                ? <summary class="touch-target">
                    <Item {...(Item==='a'?link_attrs:null)}>{title||text}</Item>
                    <Icon name="radix-icons:caret-up" size={24}/>
                </summary>
                : <li>
                    <Item {...(Item==='a'?link_attrs:null)}>{text}</Item>
                    { !!subHeadings.length && heading.depth < +max && depth > 1 && <Astro.self {..._props}/> }
                </li>
            }
            { !!subHeadings.length && heading.depth < +max && depth === 1 && <Astro.self {..._props}/> }
        </>
    })}
</Tag>