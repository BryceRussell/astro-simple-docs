---
import fg from 'fast-glob';
import Markdown from "@/layouts/Markdown.astro";
import TableOfContents from "@/components/TableOfContents.astro";
import FileTree from "@/components/FileTree.astro";
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "@/types";

var pages: MarkdownInstance<Frontmatter>[] = []

try {
    pages = await Astro.glob<Frontmatter>('/src/pages/docs/**/*.md')
} catch {
    console.warn("Could not find any markdown files, create a new entry at /admin")
}

const dirs = fg.sync('src/pages/**', { onlyDirectories: true }).map(d => d.replace('src/pages/docs', ''))
---

<Markdown breadcrumb={false}>
    <Fragment slot="sidebar-left">
        {pages.map(page => {
            return (
                <TableOfContents url={page.url||''} headings={page.getHeadings()}/>
            )
        })}
    </Fragment>
    <FileTree dirs={dirs} />
</Markdown>


